{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/Icons/Icons.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/ChatPage/Sections/ChatCard.js","components/views/ChatPage/ChatPage.js","_actions/chat_actions.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/chat_reducer.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","GET_CHATS","AFTER_POST_MESSAGE","USER_SERVER","CHAT_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","GO","_ref$style","style","_ref$fill","fill","_ref$width","width","_ref$viewBox","className","viewBox","height","d","LandingPage","Fragment","index_esm","color","fontSize","Icons_GO","display","flexDirection","alignItems","justifyContent","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","id","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","level","es_form","Item","input","prefix","icon","placeholder","value","onChange","onBlur","border","padding","borderRadius","es_checkbox","checked","href","float","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","label","hasFeedback","validateStatus","onClick","ChatCard","comment","author","sender","avatar","src","alt","content","message","substring","maxWidth","location","origin","controls","datetime","tooltip","title","updatedAt","format","fromNow","ChatPage","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","chatMessage","hanleSearchChange","e","setState","target","renderCards","chats","map","chat","Sections_ChatCard","key","_id","onDrop","files","console","log","userData","formData","FormData","append","Axios","header","content-type","msg","url","userId","userName","userImage","nowTime","socket","send","JSON","stringify","submitChatMessage","preventDefault","inherits","createClass","_this2","getChats","WebSocket","hostname","onopen","onmessage","evt","messageFromBackEnd","parse","messagesEnd","scrollIntoView","behavior","_this3","textAlign","margin","overflowY","ref","el","clear","row","layout","col","dist_es","getRootProps","getInputProps","Component","connect","LeftMenu","menu","mode","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","match","rootReducer","combineReducers","action","_objectSpread","register","loginSucces","chat_reducer_objectSpread","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91f30565.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n\n\nexport const GET_CHATS = 'get_chat';\nexport const AFTER_POST_MESSAGE = 'after_post_message';\n\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/register_login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React from \"react\";\n\nconst GO = ({\n  style = {},\n  fill = \"#000\",\n  width = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 128 128\"\n}) => (\n\n  <svg width={width}\n  style={style}\n  fill = {fill}\n  height={width}\n  viewBox={viewBox}>\n<path d=\"M108.2 64.8c-.1-.1-.2-.2-.4-.2l-.1-.1c-.1-.1-.2-.1-.2-.2l-.1-.1c-.1 0-.2-.1-.2-.1l-.2-.1c-.1 0-.2-.1-.2-.1l-.2-.1c-.1 0-.2-.1-.2-.1-.1 0-.1 0-.2-.1l-.3-.1c-.1 0-.1 0-.2-.1l-.3-.1h-.1l-.4-.1h-.2c-.1 0-.2 0-.3-.1h-2.3c-.6-13.3.6-26.8-2.8-39.6 12.9-4.6 2.8-22.3-8.4-14.4-7.4-6.4-17.6-7.8-28.3-7.8-10.5.7-20.4 2.9-27.4 8.4-2.8-1.4-5.5-1.8-7.9-1.1v.1c-.1 0-.3.1-.4.2-.1 0-.3.1-.4.2h-.1c-.1 0-.2.1-.4.2h-.1l-.3.2h-.1l-.3.2h-.1l-.3.2s-.1 0-.1.1l-.3.2s-.1 0-.1.1l-.3.2s-.1 0-.1.1l-.3.2-.1.1c-.1.1-.2.1-.2.2l-.1.1-.2.2-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1c-.1.1-.1.2-.2.2l-.1.1-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1l-.1.3s0 .1-.1.1c.4.3.4.4.4.4v.1l-.1.3v.1c0 .1 0 .2-.1.3v3.1c0 .1 0 .2.1.3v.1l.1.3v.1l.1.3s0 .1.1.1l.1.3s0 .1.1.1l.1.3s0 .1.1.1l.2.3s0 .1.1.1l.2.3s0 .1.1.1l.2.3.1.1.3.3.3.3h.1c1 .9 2 1.6 4 2.2v-.2c-4.2 12.6-.7 25.3-.5 38.3-.6 0-.7.4-1.7.5h-.5c-.1 0-.3 0-.5.1-.1 0-.3 0-.4.1l-.4.1h-.1l-.4.1h-.1l-.3.1h-.1l-.3.1s-.1 0-.1.1l-.3.1-.2.1c-.1 0-.2.1-.2.1l-.2.1-.2.1c-.1 0-.2.1-.2.1l-.2.1-.4.3c-.1.1-.2.2-.3.2l-.4.4-.1.1c-.1.2-.3.4-.4.5l-.2.3-.3.6-.1.3v.3c0 .5.2.9.9 1.2.2 3.7 3.9 2 5.6.8l.1-.1c.2-.2.5-.3.6-.3h.1l.2-.1c.1 0 .1 0 .2-.1.2-.1.4-.1.5-.2.1 0 .1-.1.1-.2l.1-.1c.1-.2.2-.6.2-1.2l.1-1.3v1.8c-.5 13.1-4 30.7 3.3 42.5 1.3 2.1 2.9 3.9 4.7 5.4h-.5c-.2.2-.5.4-.8.6l-.9.6-.3.2-.6.4-.9.7-1.1 1c-.2.2-.3.4-.4.5l-.4.6-.2.3c-.1.2-.2.4-.2.6l-.1.3c-.2.8 0 1.7.6 2.7l.4.4h.2c.1 0 .2 0 .4.1.2.4 1.2 2.5 3.9.9 2.8-1.5 4.7-4.6 8.1-5.1l-.5-.6c5.9 2.8 12.8 4 19 4.2 8.7.3 18.6-.9 26.5-5.2 2.2.7 3.9 3.9 5.8 5.4l.1.1.1.1.1.1.1.1s.1 0 .1.1c0 0 .1 0 .1.1 0 0 .1 0 .1.1h2.1000000000000005s.1 0 .1-.1h.1s.1 0 .1-.1h.1s.1 0 .1-.1c0 0 .1 0 .1-.1l.1-.1s.1 0 .1-.1l.1-.1h.1l.2-.2.2-.1h.1l.1-.1h.1l.1-.1.1-.1.1-.1.1-.1.1-.1.1-.1.1-.1v-.1s0-.1.1-.1v-.1s0-.1.1-.1v-.1s0-.1.1-.1v-1.4000000000000001s-.3 0-.3-.1l-.3-.1v-.1l.3-.1s.2 0 .2-.1l.1-.1v-2.1000000000000005s0-.1-.1-.1v-.1s0-.1-.1-.1v-.1s0-.1-.1-.1c0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1 0 0 0-.1-.1-.1l-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1v-.1l-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1-.1c2-1.9 3.8-4.2 5.1-6.9 5.9-11.8 4.9-26.2 4.1-39.2h.1c.1 0 .2.1.2.1h.30000000000000004s.1 0 .1.1h.1s.1 0 .1.1l.2.1c1.7 1.2 5.4 2.9 5.6-.8 1.6.6-.3-1.8-1.3-2.5zm-72.2-41.8c-3.2-16 22.4-19 23.3-3.4.8 13-20 16.3-23.3 3.4zm36.1 15c-1.3 1.4-2.7 1.2-4.1.7 0 1.9.4 3.9.1 5.9-.5.9-1.5 1-2.3 1.4-1.2-.2-2.1-.9-2.6-2l-.2-.1c-3.9 5.2-6.3-1.1-5.2-5-1.2.1-2.2-.2-3-1.5-1.4-2.6.7-5.8 3.4-6.3.7 3 8.7 2.6 10.1-.2 3.1 1.5 6.5 4.3 3.8 7.1zm-7-17.5c-.9-13.8 20.3-17.5 23.4-4 3.5 15-20.8 18.9-23.4 4zM41.7 17c-1.9 0-3.5 1.7-3.5 3.8 0 2.1 1.6 3.8 3.5 3.8s3.5-1.7 3.5-3.8c0-2.1-1.5-3.8-3.5-3.8zm1.6 5.7c-.5 0-.8-.4-.8-1 0-.5.4-1 .8-1 .5 0 .8.4.8 1 0 .5-.3 1-.8 1zM71.1 16.1c-1.9 0-3.4 1.7-3.4 3.8 0 2.1 1.5 3.8 3.4 3.8s3.4-1.7 3.4-3.8c0-2.1-1.5-3.8-3.4-3.8zm1.6 5.6c-.4 0-.8-.4-.8-1 0-.5.4-1 .8-1s.8.4.8 1-.4 1-.8 1z\"></path>\n</svg>\n);\n\nexport {GO};\n","import React from 'react'\nimport { FaReact } from \"react-icons/fa\";\nimport {GO} from \"../Icons/Icons\";\n\nimport \"../../../devicon.css\";\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className=\"app\">\n        <div>\n        <FaReact style={{color:\"#49c\" ,fontSize: '6.5rem' }}/>\n        <GO width={100} fill=\"#49c\" />\n        </div>\n       \n\n            <span style={{ fontSize: '2rem' }}>Let's Start Chatting!</span>\n        </div>\n        <div style={{\n            height: '20px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'}}>\n            Frontend addapted from Boiler Plate by John Ahn</div>\n        <br/>\n        <div \n        style={{\n            height: '20px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'}}>\n            Backend Powered by Golang wirtten by Lind Xiao</div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          // dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          // handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      \n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          // dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          // handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport moment from 'moment';\nimport { Comment, Tooltip, Avatar } from 'antd';\n\nfunction ChatCard(props) {\n    return (\n        <div style={{ width: '100%' }}>\n            <Comment\n                author={props.sender.name}\n                avatar={\n                    <Avatar\n                        src={props.sender.image} alt={props.sender.name}\n                    />\n                }\n                content={\n                    props.message.substring(0, 8) === \"uploads/\" ?\n                        // this will be either video or image \n\n                        props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\n                            <video\n                                style={{ maxWidth: '200px' }}\n                                src={window.location.origin+`/${props.message}`} alt=\"video\"\n                                type=\"video/mp4\" controls\n                            />\n                            :\n                            <img\n                                style={{ maxWidth: '200px' }}\n                                src={window.location.origin+`/${props.message}`}\n                                alt=\"img\"\n                            />\n                        :\n                        <p>\n                            {props.message}\n                        </p>\n                }\n                datetime={\n                    <Tooltip title={moment(props.updatedAt).format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment(props.updatedAt).fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n        </div>\n    )\n}\n\nexport default ChatCard;\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Row, Col, } from 'antd';\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, afterPostMessage } from \"../../../_actions/chat_actions\"\nimport ChatCard from \"./Sections/ChatCard\"\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nexport class ChatPage extends Component {\n    state = {\n        chatMessage: \"\",\n    }\n\n    componentDidMount() {\n        // is called only once\n\n        this.props.dispatch(getChats());\n\n        // this.socket = io(server);\n        this.socket = new WebSocket(\"ws:\"+window.location.hostname+\"/ws\");\n        \n        // this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\n        //     console.log(messageFromBackEnd)\n        //     this.props.dispatch(afterPostMessage(messageFromBackEnd));\n        // })\n        \n        this.socket.onopen = () =>{\n            console.log('web socket connected')\n        }\n\n        this.socket.onmessage = evt =>{\n            // the only message will get from server is \n            // Output Chat message,\n            const messageFromBackEnd = JSON.parse(evt.data)\n            console.log(messageFromBackEnd)\n            this.props.dispatch(afterPostMessage(messageFromBackEnd))\n        }\n    }\n\n    componentDidUpdate() {\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    hanleSearchChange = (e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n\n    renderCards = () =>\n        this.props.chats.chats\n        &&\n         this.props.chats.chats.map((chat) => (\n            <ChatCard key={chat._id}  {...chat} />\n        ));\n\n    onDrop = (files) => {\n        console.log(files)\n\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n        let formData = new FormData();\n\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n\n        formData.append(\"file\", files[0])\n\n        Axios.post('api/chat/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    // let chatMessage = response.data.url;\n                    // let userId = this.props.user.userData._id\n                    // let userName = this.props.user.userData.name;\n                    // let userImage = this.props.user.userData.image;\n                    // let nowTime = moment();\n                    // let type = \"VideoOrImage\"\n\n                    var msg ={\n                        chatMessage : response.data.url,\n                        userId: this.props.user.userData._id,\n                        userName : this.props.user.userData.name,\n                        userImage : this.props.user.userData.image,\n                        nowTime : moment(),\n                        type : \"VideoOrImage\"\n                    };\n                    this.socket.send(JSON.stringify(msg))\n                    // this.socket.emit(\"Input Chat Message\", {\n                    //     chatMessage,\n                    //     userId,\n                    //     userName,\n                    //     userImage,\n                    //     nowTime,\n                    //     type\n                    // });\n                }\n            })\n    }\n\n\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n\n        // let chatMessage = this.state.chatMessage;\n        // let userId = this.props.user.userData._id\n        // let userName = this.props.user.userData.name;\n        // let userImage = this.props.user.userData.image;\n        // let nowTime = moment();\n        // let type = \"Text\"\n\n        var msg = {\n            chatMessage : this.state.chatMessage,\n            userId: this.props.user.userData._id,\n            userName : this.props.user.userData.name,\n            userImage : this.props.user.userData.image,\n            nowTime : moment(),\n            type : \"Text\"\n        }\n        this.socket.send(JSON.stringify(msg))\n\n        // this.socket.emit(\"Input Chat Message\", {\n        //     chatMessage,\n        //     userId,\n        //     userName,\n        //     userImage,\n        //     nowTime,\n        //     type\n        // });\n        this.setState({ chatMessage: \"\" })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <p style={{ fontSize: '2rem', textAlign: 'center' }}> Real Time Chat</p>\n                </div>\n\n                <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n                    <div className=\"infinite-container\" style={{ height: '500px', overflowY: 'scroll' }}>\n                        {this.props.chats && (\n                            this.renderCards()\n                        )}\n                        <div\n                            ref={el => {\n                                this.messagesEnd = el;\n                            }}\n                            style={{ float: \"left\", clear: \"both\" }}\n                        />\n                    </div>\n\n                    <Row >\n                        <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n                            <Col span={18}>\n                                <Input\n                                    id=\"message\"\n                                    prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Enjoy\"\n                                    type=\"text\"\n                                    value={this.state.chatMessage}\n                                    onChange={this.hanleSearchChange}\n                                />\n                            </Col>\n                            <Col span={2}>\n                                <Dropzone onDrop={this.onDrop}>\n                                    {({ getRootProps, getInputProps }) => (\n                                        <section>\n                                            <div {...getRootProps()}>\n                                                <input {...getInputProps()} />\n                                                <Button>\n                                                    <Icon type=\"upload\" />\n                                                </Button>\n                                            </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                            </Col>\n\n                            <Col span={4}>\n                                <Button type=\"primary\" style={{ width: '100%' }} onClick={this.submitChatMessage} htmlType=\"submit\">\n                                    <Icon type=\"enter\" />\n                                </Button>\n                            </Col>\n                        </Form>\n                    </Row>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        chats: state.chat\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatPage);\n","import axios from 'axios';\nimport {\n    GET_CHATS,\n    AFTER_POST_MESSAGE\n} from './types';\nimport { CHAT_SERVER } from '../components/Config.js';\n\nexport function getChats(){\n    const request = axios.get(`${CHAT_SERVER}/getChats`)\n        .then(response => response.data);\n    \n    return {\n        type: GET_CHATS,\n        payload: request\n    }\n}\n\nexport function afterPostMessage(data){\n\n    return {\n        type: AFTER_POST_MESSAGE,\n        payload: data\n    }\n}\n\n","import React from 'react';\nimport { Menu } from 'antd';\n// const SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"chat\">\n      <a href=\"/chat\">Chat Room</a>\n    </Menu.Item>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">GoReactChat</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '50px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Enjoy  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport ChatPage from \"./views/ChatPage/ChatPage\"\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div className=\"content_wrapper\" style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/chat\" component={Auth(ChatPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    GET_CHATS,\n    AFTER_POST_MESSAGE\n} from '../_actions/types';\n \nexport default function(state={},action){\n    switch(action.type){\n        case GET_CHATS:\n            return {...state, chats: action.payload }\n        case AFTER_POST_MESSAGE:\n                return {...state, chats: state.chats.concat(action.payload) }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport chat from './chat_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n    chat\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}